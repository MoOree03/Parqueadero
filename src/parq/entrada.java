/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package parq;

import java.time.LocalDate;
import java.time.LocalTime;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Miguel Moreno
 */
public class entrada extends javax.swing.JFrame {

    Vehiculo objVeh;
    ArrayList<Vehiculo> registro = new ArrayList<Vehiculo>();

    /**
     * Creates new form entrada
     */
    public entrada() {
        initComponents();
        btnSalida.setEnabled(false);
        btnRegistrarE.setEnabled(false);
        inicioVnt();
        inHabilitarEntrada();
    }

    public void inicioVnt() {
        lbPropietario.setVisible(false);
        lbPlaca.setVisible(false);
        lbTipo.setVisible(false);
        cmbTipo.setVisible(false);
        txtPropietario.setVisible(false);
        txtPlaca.setVisible(false);
        btnRegistrar.setVisible(false);
        listVehiculos.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbPropietario = new javax.swing.JLabel();
        txtPropietario = new javax.swing.JTextField();
        lbPlaca = new javax.swing.JLabel();
        txtPlaca = new javax.swing.JTextField();
        lbTipo = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtAñoE = new javax.swing.JTextField();
        cmbTipo = new javax.swing.JComboBox<>();
        btnRegistrar = new javax.swing.JButton();
        btnRegistrarE = new javax.swing.JButton();
        btnSalida = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtMesE = new javax.swing.JTextField();
        txtHoraE = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtDiaE = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtMinE = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cmbSeleccionar = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listVehiculos = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbPropietario.setText("Propietario");

        txtPropietario.setToolTipText("");
        txtPropietario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPropietarioFocusLost(evt);
            }
        });

        lbPlaca.setText("Placa");

        lbTipo.setText("Tipo");

        jLabel4.setText("Año Entrada");

        cmbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bicicleta", "Motocicleta", "Automovil" }));

        btnRegistrar.setText("Registrar Vehiculo");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnRegistrarE.setText("Registrar Entrada");
        btnRegistrarE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarEActionPerformed(evt);
            }
        });

        btnSalida.setText("Salida");
        btnSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalidaActionPerformed(evt);
            }
        });

        jLabel5.setText("Mes Entrada");

        jLabel6.setText("Hora Entrada");

        jLabel7.setText("Dia Entrada");

        jLabel13.setText("Min Entrada");

        cmbSeleccionar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Registrar", "Buscar" }));
        cmbSeleccionar.setSelectedIndex(-1);
        cmbSeleccionar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSeleccionarItemStateChanged(evt);
            }
        });

        jLabel8.setText("Seleccionar");

        jScrollPane2.setViewportView(listVehiculos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbTipo)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbPlaca)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbPropietario)
                                .addGap(18, 18, 18)
                                .addComponent(txtPropietario, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(btnRegistrar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(jLabel13))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRegistrarE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtMinE)
                        .addComponent(txtDiaE)
                        .addComponent(txtAñoE, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSalida)
                    .addComponent(txtMesE, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHoraE, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbSeleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(174, 174, 174))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cmbSeleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbPropietario)
                            .addComponent(txtPropietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbPlaca)
                            .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbTipo)
                            .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtAñoE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDiaE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMinE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRegistrarE)
                            .addComponent(btnSalida)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMesE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHoraE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void limpiarRegistro() {
        txtPropietario.setText("");
        txtPlaca.setText("");
        cmbTipo.setSelectedIndex(0);
    }
    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        if (txtPropietario.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Tiene que llenar el campo propietario antes de continuar!");
            txtPropietario.requestFocus();
            return;
        }
        if (txtPlaca.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Tiene que llenar el campo placa antes de continuar!");
            txtPlaca.requestFocus();
            return;
        }
        for (int i = 0; i < listVehiculos.getModel().getSize(); i++) {
            if (listVehiculos.getModel().getElementAt(i).contains(txtPlaca.getText())) {
                JOptionPane.showMessageDialog(null, "El vehiculo ya se ha registrado!");
                txtPlaca.requestFocus();
                return;
            }
        }

        int tipo = cmbTipo.getSelectedIndex();
        tipo += 1;
        objVeh = new Vehiculo(txtPlaca.getText(), txtPropietario.getText(), tipo);

        registro.add(objVeh);
        btnRegistrarE.setEnabled(true);
        listarNuevoRegistro();
        limpiarRegistro();
        HabilitarEntrada();
    }//GEN-LAST:event_btnRegistrarActionPerformed
    private boolean validarE() {
        String[] fecha = LocalDate.now().toString().split("-");
        String[] hora = LocalTime.now().toString().split(":");
        if (listVehiculos.getSelectedIndex()<0) {
            JOptionPane.showMessageDialog(null, "Tiene que buscar y seleccionar un vehiculo!");
            listVehiculos.setEnabled(true);
            listVehiculos.requestFocus();
            return false;
        }
        
        if (txtAñoE.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Tiene que llenar el campo Año de continuar!");
            txtAñoE.requestFocus();
            return false;
        }
        if (Integer.parseInt(txtAñoE.getText()) < Integer.parseInt(fecha[0])) {
            JOptionPane.showMessageDialog(null, "El año es menor al actual " + fecha[0] + "!");
            txtAñoE.requestFocus();
            return false;
        }
        if (txtMesE.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Tiene que llenar el campo Mes antes de continuar!");
            txtMesE.requestFocus();
            return false;
        }
        if (Integer.parseInt(txtMesE.getText()) < Integer.parseInt(fecha[1]) && Integer.parseInt(txtAñoE.getText()) == Integer.parseInt(fecha[0])) {
            JOptionPane.showMessageDialog(null, "El mes es menor al actual " + fecha[1] + "!");
            txtMesE.requestFocus();
            return false;
        }
        if (Integer.parseInt(txtMesE.getText()) > 12) {
            JOptionPane.showMessageDialog(null, "Mes invalido!");
            txtMesE.requestFocus();
            return false;
        }
        if (txtDiaE.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Tiene que llenar el campo Dia antes de continuar!");
            txtDiaE.requestFocus();
            return false;
        }
        if (Integer.parseInt(txtDiaE.getText()) > 31) {
            JOptionPane.showMessageDialog(null, "El dia invalido!");
            txtDiaE.requestFocus();
            return false;
        }
       
        if (Integer.parseInt(txtDiaE.getText()) < Integer.parseInt(fecha[2]) && Integer.parseInt(txtAñoE.getText()) == Integer.parseInt(fecha[0]) && Integer.parseInt(txtMesE.getText()) == Integer.parseInt(fecha[0]) ) {
            JOptionPane.showMessageDialog(null, "El dia es menor al actual " + fecha[2] + "!");
            txtDiaE.requestFocus();
            return false;
        }

        if (txtHoraE.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Tiene que llenar el campo Hora antes de continuar!");
            txtHoraE.requestFocus();
            return false;
        }
        if (Integer.parseInt(txtHoraE.getText()) > 23) {
            JOptionPane.showMessageDialog(null, "La hora es invalida!");
            txtHoraE.requestFocus();
            return false;
        }
        JOptionPane.showMessageDialog(null, Integer.parseInt(fecha[0]));
        JOptionPane.showMessageDialog(null, Integer.parseInt(fecha[1]));
        JOptionPane.showMessageDialog(null, Integer.parseInt(fecha[2]));
        if (Integer.parseInt(txtHoraE.getText()) < Integer.parseInt(hora[0]) && Integer.parseInt(txtAñoE.getText()) == Integer.parseInt(fecha[0]) && Integer.parseInt(txtDiaE.getText()) == Integer.parseInt(fecha[2]) ) {
            JOptionPane.showMessageDialog(null, "La hora es menor a la actual " + hora[0] + "!");
            txtHoraE.requestFocus();
            return false;
        }

        if (txtMinE.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Tiene que llenar el campo Minutos antes de continuar!");
            txtMinE.requestFocus();
            return false;
        }
        if (Integer.parseInt(txtMinE.getText()) > 59) {
            JOptionPane.showMessageDialog(null, "El minuto es invalido!");
            txtMinE.requestFocus();
            return false;
        }
        if (Integer.parseInt(txtMinE.getText()) < Integer.parseInt(hora[1]) && Integer.parseInt(txtAñoE.getText()) == Integer.parseInt(fecha[0]) && Integer.parseInt(txtHoraE.getText()) == Integer.parseInt(hora[0])) {
            JOptionPane.showMessageDialog(null, "El minuto es menor al actual " + hora[1] + "!");
            txtMinE.requestFocus();
            return false;
        }
        
        return true;
    }

    private void inHabilitarEntrada() {
        txtAñoE.setEnabled(false);
        txtDiaE.setEnabled(false);
        txtMinE.setEnabled(false);
        txtMesE.setEnabled(false);
        txtHoraE.setEnabled(false);
    }

    private void HabilitarEntrada() {
        txtAñoE.setEnabled(true);
        txtDiaE.setEnabled(true);
        txtMinE.setEnabled(true);
        txtMesE.setEnabled(true);
        txtHoraE.setEnabled(true);
    }

    private void listarNuevoRegistro() {
        DefaultListModel<String> modelo = new DefaultListModel<>();
        for (Vehiculo a : registro) {
            modelo.addElement(a.placa);
        }
        listVehiculos.setModel(modelo);
    }

    private void btnRegistrarEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarEActionPerformed

        if (validarE()) {
            int añoE = Integer.parseInt(txtAñoE.getText());
            int mesE = Integer.parseInt(txtMesE.getText());
            int diaE = Integer.parseInt(txtDiaE.getText());
            int horaE = Integer.parseInt(txtHoraE.getText());
            int minE = Integer.parseInt(txtMinE.getText());

            objVeh.registrarEntrada(añoE, mesE, diaE, horaE, minE);
            btnSalida.setEnabled(true);
            JOptionPane.showMessageDialog(null, "Ha registrado la entrada correctamente!");
        }

    }//GEN-LAST:event_btnRegistrarEActionPerformed


    private void btnSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalidaActionPerformed
        entrada VntEntrada = new entrada();
        VntEntrada.setVisible(false);
        if (lbPropietario.isVisible()) {
            salida VntSalida = new salida(objVeh);
            VntSalida.setVisible(true);
        } else {
            Vehiculo a = buscarVehiculo();
            salida VntSalida = new salida(a);
            VntSalida.setVisible(true);
        }

    }//GEN-LAST:event_btnSalidaActionPerformed

    private Vehiculo buscarVehiculo() {
        String itemSelected = listVehiculos.getSelectedValue().toString();
        Vehiculo vhSelected = null;
        for (Vehiculo a : registro) {
            if (a.placa == itemSelected) {
                vhSelected = a;
            }
        }
        return vhSelected;
    }
    private void txtPropietarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPropietarioFocusLost

    }//GEN-LAST:event_txtPropietarioFocusLost

    private void cmbSeleccionarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSeleccionarItemStateChanged
        inicioVnt();
        String itemSelected = cmbSeleccionar.getSelectedItem().toString();

        switch (itemSelected) {
            case "Registrar":
                lbPropietario.setVisible(true);
                lbPlaca.setVisible(true);
                lbTipo.setVisible(true);
                txtPropietario.setVisible(true);
                txtPlaca.setVisible(true);
                btnRegistrar.setVisible(true);
                cmbTipo.setVisible(true);
                break;
            case "Buscar":
                listVehiculos.setEnabled(true);
                break;
        }
    }//GEN-LAST:event_cmbSeleccionarItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(entrada.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(entrada.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(entrada.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(entrada.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new entrada().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnRegistrarE;
    private javax.swing.JButton btnSalida;
    private javax.swing.JComboBox<String> cmbSeleccionar;
    private javax.swing.JComboBox<String> cmbTipo;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbPlaca;
    private javax.swing.JLabel lbPropietario;
    private javax.swing.JLabel lbTipo;
    private javax.swing.JList<String> listVehiculos;
    private javax.swing.JTextField txtAñoE;
    private javax.swing.JTextField txtDiaE;
    private javax.swing.JTextField txtHoraE;
    private javax.swing.JTextField txtMesE;
    private javax.swing.JTextField txtMinE;
    private javax.swing.JTextField txtPlaca;
    private javax.swing.JTextField txtPropietario;
    // End of variables declaration//GEN-END:variables
}
